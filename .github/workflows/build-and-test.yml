name: Build affected packages

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Pnpm
        run: corepack enable

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Set Nx SHA
        uses: nrwl/nx-set-shas@v3

      - name: Install Dependencies
        run: pnpm install

      - name: Install Cypress
        run: npx cypress install

      - name: Check Code Format
        run: npx nx format:check

      - name: Run Affected Build
        run: npx nx affected -t build --parallel=10 --exclude='*,!tag:package'

      - name: Run Affected Lint
        run: npx nx affected -t lint --parallel=7 --exclude='*,!tag:package'

      - name: Run Affected Test
        run: npx nx affected -t test --parallel=3 --exclude='*,!tag:package'

  e2e-tests:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          [
            next-js-dev,
            next-js-prod,
            modernjs,
            runtime-host,
            webpack-host,
            node-federation,
          ]
      max-parallel: 3
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Pnpm
        run: corepack enable

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install

      - name: Run E2E Tests ${{ matrix.app }}
        run: |
          pnpm run app:${{ matrix.app }}:dev &
          echo "done" &&
          pnpm exec wait-on tcp:${{ matrix.port }} &&
          npx nx run-many --target=test:e2e --projects=${{ matrix.app }} --parallel=2 &&
          lsof -ti tcp:${{ matrix.port }} | xargs kill
        env:
          PORT: ${{ matrix.port }}
